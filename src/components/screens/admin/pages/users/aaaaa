import { useState, useMemo } from "react";
import { MantineReactTable, useMantineReactTable } from "mantine-react-table";
import { Modal, Button, Group } from "@mantine/core";
import Loader from "../../../../ui/Loader";
import { GiConfirmed } from "react-icons/gi";
import { MdOutlineNotInterested } from "react-icons/md";

const UserTable = ({ users }) => {
  const [selectedUser, setSelectedUser] = useState(null);
  const [modalOpened, setModalOpened] = useState(false);

  // Хуки всегда вызываются, независимо от наличия users
  const columns = useMemo(
    () => [
      {
        accessorKey: "name",
        header: "First Name",
      },
      {
        accessorKey: "surname",
        header: "Last Name",
      },
      {
        accessorKey: "patronymic",
        header: "Patronymic",
      },
      {
        accessorKey: "email",
        header: "Email",
      },
      {
        accessorKey: "login",
        header: "Login",
      },
      {
        accessorKey: "isAdmin",
        header: "Admin",
        Cell: ({ cell }) => (
          <span>
            {cell.getValue() ? <GiConfirmed /> : <MdOutlineNotInterested />}
          </span>
        ),
      },
      {
        accessorKey: "isConfirmed",
        header: "Confirmed",
        Cell: ({ cell }) => (
          <span>
            {cell.getValue() ? <GiConfirmed /> : <MdOutlineNotInterested />}
          </span>
        ),
      },
      {
        header: "Actions",
        Cell: ({ row }) => (
          <Button onClick={() => openModal(row.original)}>Просмотреть</Button>
        ),
      },
    ],
    []
  );

  const table = useMantineReactTable({
    columns,
    data: users || [], // Передаем пустой массив, если users нет
  });

  const openModal = (user) => {
    setSelectedUser(user);
    setModalOpened(true);
  };

  // Возвращаем основной JSX независимо от наличия данных
  return (
    <>
      {!users ? <Loader /> : <MantineReactTable table={table} />}

      <Modal
        opened={modalOpened}
        onClose={() => setModalOpened(false)}
        title="Детали пользователя"
      >
        {selectedUser && (
          <div>
            <p>
              <strong>Имя:</strong> {selectedUser.name}
            </p>
            <p>
              <strong>Фамилия:</strong> {selectedUser.surname}
            </p>
            <p>
              <strong>Отчество:</strong> {selectedUser.patronymic}
            </p>
            <p>
              <strong>Email:</strong> {selectedUser.email}
            </p>
            <p>
              <strong>Логин:</strong> {selectedUser.login}
            </p>
            <p>
              <strong>Администратор:</strong>
              {selectedUser.isAdmin ? "Да" : "Нет"}
            </p>
            <p>
              <strong>Подтверждён:</strong>
              {selectedUser.isConfirmed ? "Да" : "Нет"}
            </p>
          </div>
        )}
      </Modal>
    </>
  );
};

export default UserTable;